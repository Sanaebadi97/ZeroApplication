apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    def majorVersion = 0
    def minorVersion = 0
    def patchVersion = 1

    defaultConfig {
        applicationId "ir.beigirad.app"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode majorVersion * 10000 + minorVersion * 100 + patchVersion
        versionName "${majorVersion}.${minorVersion}.${patchVersion}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        normal {
        }
        demo {
            applicationIdSuffix ".demo"
        }
    }

    if (project.hasProperty("myproject.properties") && new File(project.property("myproject.properties")).exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file(project.property("myproject.properties"))))
        signingConfigs {
            release {
                storeFile file(props['storeFile'])
                storePassword props['storePassword']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }
    }
    buildTypes.release.signingConfig = signingConfigs.release


    applicationVariants.all { variant ->
        def appName
        if (project.hasProperty("applicationName")) {
            appName = "${applicationName}"
        } else {
            appName = parent.name
        }
        variant.outputs.each { output ->
            def newApkFile
            newApkFile = "${appName}-${output.baseName}-${variant.versionName}.apk"
            output.outputFile = new File(output.outputFile.parent, newApkFile)
        }
    }


    splits {
        abi {
            enable false
            reset()
            include "armeabi-v7a"
        }
    }


}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


    compile rootProject.ext.libraries.appCompat
    compile rootProject.ext.libraries.design
    compile rootProject.ext.libraries.support
    compile rootProject.ext.libraries.cardView

    compile rootProject.ext.libraries.calligraphy
    compile rootProject.ext.libraries.lovelyDialog


    compile rootProject.ext.libraries.retrofit
    compile rootProject.ext.libraries.gsonConvertor
    compile rootProject.ext.libraries.stethoOkhttp

    compile rootProject.ext.kotlinDependencyJdk

}
repositories {
    mavenCentral()
}
